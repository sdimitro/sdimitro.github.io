<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Core Dump</title>
    <link>https://sdimitro.github.io/</link>
    <description>Recent content on Core Dump</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 09 Oct 2016 12:00:00 -0600</lastBuildDate>
    
	<atom:link href="https://sdimitro.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OpenZFS Developer Summit 2016</title>
      <link>https://sdimitro.github.io/post/openzfs-2016/</link>
      <pubDate>Sun, 09 Oct 2016 12:00:00 -0600</pubDate>
      
      <guid>https://sdimitro.github.io/post/openzfs-2016/</guid>
      <description>On September 26th I had the pleasure of going to the OpenZFS Developer Summit of 2016. You can find more information on the event (slides, videos, etc..) here. The event itself was great. Many great speakers shared their experience with ZFS and how they use it in their everyday job. Brian Behlendorf, for example, presented how ZFS is used together with Lustre in supercomputers in the Livermore National Lab, and the modifications that his team had to do to ZFS in order for it to serve their use-case.</description>
    </item>
    
    <item>
      <title>Hello, Delphix!</title>
      <link>https://sdimitro.github.io/post/hello-delphix/</link>
      <pubDate>Mon, 15 Aug 2016 12:00:00 -0600</pubDate>
      
      <guid>https://sdimitro.github.io/post/hello-delphix/</guid>
      <description>This is not the standard post that comes with a problem, some motivation, an objective, and a proposed solution. This post is just an update and an opportunity for me to share some great news.
Next week I will be joining the ZFS team of Delphix in their San Francisco office. Systems programming/engineering has always been the most enjoyable area of computers for me and I believe that this is what I want to do.</description>
    </item>
    
    <item>
      <title>The journey of a ZFS read() call in 1 min [Î¼]</title>
      <link>https://sdimitro.github.io/post/zfs-read-dtrace-micro/</link>
      <pubDate>Thu, 11 Aug 2016 12:00:00 -0600</pubDate>
      
      <guid>https://sdimitro.github.io/post/zfs-read-dtrace-micro/</guid>
      <description>Motivation &amp;amp; Objective I&amp;rsquo;ve been reading up a lot on ZFS recently. As a part of this study, I&amp;rsquo;m planning to watch a video where Matt Ahrens goes through the read and write codepaths on ZFS. Before watching it though, I thought it would be cool if I went through the code by myself. Then, hopefully, any questions that I have while reading the code will be addressed in the video code review.</description>
    </item>
    
    <item>
      <title>How does my computer know about time zones?</title>
      <link>https://sdimitro.github.io/post/keeping-track-time/</link>
      <pubDate>Tue, 07 Jun 2016 12:00:00 -0600</pubDate>
      
      <guid>https://sdimitro.github.io/post/keeping-track-time/</guid>
      <description>&amp;ldquo;Even simple-looking things can sometimes have a surprising twist in software. And everyone who thinks that programming dates is easy to get right the first time probably hasn&amp;rsquo;t done much of it.&amp;rdquo; &amp;ndash; Peter van der Linden (Expert C Programming)
Main Problem and Motivation Recently, a colleague of mine introduced me to World Time Buddy, a convenient world clock and time zone converter used to schedule online meetings. I liked the application and I decided that I would like to develop a clone of it that would work locally with no internet connection and output the specified time zone data as plain text in the command line.</description>
    </item>
    
    <item>
      <title>Notes on Testing: Legacy code in illumos</title>
      <link>https://sdimitro.github.io/post/nuking-legacy-code/</link>
      <pubDate>Mon, 22 Dec 2014 12:00:00 -0600</pubDate>
      
      <guid>https://sdimitro.github.io/post/nuking-legacy-code/</guid>
      <description>Last Friday, Robert Mustacchi shared a great guide that new developers can reference when working with the illumos build system. As I was reading it, I came across the section on testing changes in the basic workflow chapter. In that section Mustacchi gave some general guidelines on how a developer should decide the way in which their changes should be tested.
Recently on illumos-core, I was working on an issue that had the goal of removing some legacy code and required me to delete content from many files (around 293).</description>
    </item>
    
    <item>
      <title>Scripting GDB</title>
      <link>https://sdimitro.github.io/post/scripting-gdb/</link>
      <pubDate>Sat, 01 Feb 2014 12:00:00 -0600</pubDate>
      
      <guid>https://sdimitro.github.io/post/scripting-gdb/</guid>
      <description>Motivation Two semesters ago, I was introduced to gdb in my systems programming course. Since this was the first time that I used an actual debugger, I was really impressed by the things it could do. I wanted to see what gdb was capable of, so I tried every single command on simple programs. Unfortunately, by the time I actually needed gdb in my class projects I forgot most of them.</description>
    </item>
    
  </channel>
</rss>