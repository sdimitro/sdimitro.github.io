<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Warlock on Core Dump</title>
    <link>http://sdimitro.github.io/tags/warlock/</link>
    <description>Recent content in Warlock on Core Dump</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Dec 2014 12:00:00 -0600</lastBuildDate>
    <atom:link href="http://sdimitro.github.io/tags/warlock/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Notes on Testing: Legacy code in illumos-core</title>
      <link>http://sdimitro.github.io/post/nuking-legacy-code/</link>
      <pubDate>Mon, 22 Dec 2014 12:00:00 -0600</pubDate>
      
      <guid>http://sdimitro.github.io/post/nuking-legacy-code/</guid>
      <description>&lt;p&gt;Last Friday, Robert Mustacchi shared &lt;a href=&#34;http://illumos.org/books/dev/&#34;&gt;a great guide&lt;/a&gt; that new developers
can reference when working with the illumos build system. As I was
reading it, I came across the section on &lt;a href=&#34;http://illumos.org/books/dev/workflow.html#testing&#34;&gt;testing changes&lt;/a&gt; in the basic
workflow chapter. In that section Mustacchi gave some general guidelines
on how a developer should decide the way in which their changes should be
tested.&lt;/p&gt;

&lt;p&gt;Recently on illumos-core, I was working on an &lt;a href=&#34;https://github.com/gdamore/illumos-core/issues/10&#34;&gt;issue&lt;/a&gt; that had the goal of
removing some legacy code and required me to delete content from many files
(around 293). After I made my edits and did a full nightly build, no errors
showed up in my logs and I was able to boot into my new system.
Garrett D&amp;rsquo;Amore reviewed my code to make sure that nothing suspicious was
going on.&lt;/p&gt;

&lt;p&gt;The problem was that many of the files that I had changed were drivers/systems
that my system didn&amp;rsquo;t even use (random device drivers or SPARC-specific files).
Since I am fairly new to illumos and kernel development in general, I had no
idea how to test these specific changes. Luckily, D&amp;rsquo;Amore pointed me to the
&lt;a href=&#34;http://illumos.org/man/1onbld/wsdiff&#34;&gt;wsdiff(1)&lt;/a&gt; utility.&lt;/p&gt;

&lt;p&gt;As you can see from the man page, if you keep your proto area before applying
your changes, you can use it with wsdiff to find differences in the binaries
between &amp;ldquo;before&amp;rdquo; and &amp;ldquo;after&amp;rdquo; your changes. One thing to remember is that DEBUG
builds tend to carry debug macros which emit line numbers (e.g &lt;code&gt;__LINE__&lt;/code&gt; macro)
so if you run wsdiff between two DEBUG builds to test your changes, be sure that
some, if not all, differences will come from there. (Check option -d of wsdiff
for other relevant info)&lt;/p&gt;

&lt;p&gt;Taking the issue that I mentioned above as an example, running plain wsdiff
after my changes, a report with a huge amount of differences was generated,
due to line numbers. Thus, I had to do two full non-DEBUG builds to make sure
that my binaries stayed the same after my changes. Apparently it is also
possible to invoke wsdiff through nightly(1), looking at Example 4 from
the wsdiff man page.&lt;/p&gt;

&lt;p&gt;Besides my case-study of removing legacy code though, I believe that wsdiff
has its place in testing for other situations as well. Examples can be changes
that touch a lot of files or have to do with libraries. Basically, any change
that risks changing binaries that you are not supposed to, by mistake.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EDIT&lt;/strong&gt;: A big thanks to Nick Zivkovic for pointing out mistakes in the initial
version of this post.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EDIT 2&lt;/strong&gt;: I suggested adding a section about this to the original guide.
The above information is now &lt;a href=&#34;https://github.com/illumos/dev-guide/commit/3fcf78337e4177a811013a4845166b58f76d2038&#34;&gt;part of the dev-guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;EDIT 3&lt;/strong&gt;: The original title on my old Wordpress website was
&amp;ldquo;Notes on Testing: Nuking Legacy code at illumos-core&amp;rdquo;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>